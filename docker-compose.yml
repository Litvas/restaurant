services:
  menu-service:
    image: menu-service
    build:
      context: ./menu-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - ./menu-service/.env
    depends_on:
      menu-db:
        condition: service_healthy
      elasticsearch:
          condition: service_healthy

  menu-db:
    image: postgres:16
    restart: always
    shm_size: 50mb
    container_name: menu-db
    ports:
      - "5440:5440"
    env_file:
      - ./menu-service/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      retries: 5
      timeout: 3s


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - cluster.name=demo-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
    healthcheck:
      test: "curl -s http://localhost:9200 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 50


  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: always

  logstash:
    image: docker.elastic.co/logstash/logstash:8.17.2
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
    volumes:
      - ./logstash/config:/logstash/logstash.config
    ports:
      - "5044:5044"
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: always

networks:
  menu-network:
    driver: bridge






